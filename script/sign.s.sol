// SPDX-License-Identifier: UNLICENSED

pragma solidity 0.8.19;

import "forge-std/Script.sol";
import "src/Bookkeeper.sol";
import "src/libraries/LibBookkeeper.sol";

// to run:
// forge script script/sign.s.sol:SignScript

contract SignScript is Script {
    function setUp() public {}

    function run() public {
        uint256 privateKey = uint256(0);

        Blueprint memory bp = Blueprint({
            data: "0x3100000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000093a8000000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000004c0000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005e000000000000000000000000000000000000000000000000000000000000006a00000000000000000000000000000000000000000000000000000000000000760000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000007a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000014000000000000000000000000000000000000000000000000000000000000000000000000000000000032dbd8db20bfe5506104119edcc89bc3d8c5c3ee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000014000000000000000000000000000000000000000000000000000000000000000000000000000000000032dbd8db20bfe5506104119edcc89bc3d8c5c3ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017e06bfa961338955e68f57bca08ccd4616c8b770000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004000000000000000000000000013af3c337a0d9b54e71c7fd663fe5bab9e341b6e360000000000000000000000000000000000000000000000000000000000000000000000000000000000000019ed2cbd8b7c02befa2f9f234d80dc5ae2340b1d00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000b1a2bc2ec50000000000000000000000000000b2935387c6bc58780dd50ead3ab54052da6ccb270000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000693941a7d80b9324372a475755866eef7cd6b9a40000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000693941a7d80b9324372a475755866eef7cd6b9a40000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006e18866f821c76819d46877c5410121539a47073000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000",
            endTime: 16777216,
            maxNonce: 16777216,
            publisher: address(0x13af3C337A0d9B54E71C7Fd663Fe5bAb9E341b6E),
            startTime: 0
        });

        Bookkeeper bookkeeper = new Bookkeeper();
        bytes32 fullHash = bookkeeper.getBlueprintHash(bp);

        (uint8 v, bytes32 r, bytes32 s) = vm.sign(privateKey, fullHash);

        console.log("fullHash: ");
        console.logBytes32(fullHash);
        console.log("signature: ");
        console.logBytes(abi.encodePacked(r, s, v));
    }
}
